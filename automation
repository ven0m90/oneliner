#tmux
tmux new -s recon


search asn on shodan and use facet analysis or use shodanx with httpx nuclei
http.title like index of / dirttory lisning spend time you can find critical 
port you find intersting port
redis.key



#check ips and subdomains  httpx-tech-status nuclei-tech  like status code like 302,403,404 or  dashboard login ports than run ffuf
#........................................................................................................................................
#wordlist
~/wordlist/httparchive_directories_1m_2024_04_28.txt
~/wordlist/https://wordlists-cdn.assetnote.io/data/manual/raft-large-words-ext.txt
~/wordlist/words-list/eng-list.txt

ffuf -c -mc 200 -w  ~/wordlist/onelistforallshort.txt -u 

ffuf -c -mc 200,302 -w ~/wordlist/words-list/eng-list.txt  -u FUZZ.html


ffuf -c -mc 200,302 -w ~/wordlist/words-list/eng-list.txt  -u FUZZ.zip
#if you run on aspx or asp dotnet app you find lot 
#check 302 highest contant lengh









#nuclei
#........................................................................................................................................
#downloading-latest-template
rm -rf  ~/nuclei-templates
git clone https://github.com/projectdiscovery/nuclei-templates.git  ~/nuclei-templates

nuclei  ~/nuclei-templates -o nuclei.txt -u   |notify -silent  -bulk

#intersting
#go haktivity  on search people find comman  zip etc. file finding than
like python.zip search html:"python.zip" on shodan open and check matcher 
create template  run all ips and subdomains.txt
dashboard  copy path search on google inurl:"nagos/side.php"
create template  run all ips and subdomains.txt


#use nuclei one template on all httpx like
adminer.yaml or new cve or default credentials 
run all ips and subdomains.txt




#mass hunting
open redirect
paramspider openredirex


#wpscan

cat site| while read d ; do wpscan  --force  --scope  --rua  -e u --api-token NrZ3QLaKW3F4WSnL4t2bLPEaqwoxySWvtDTxEnmJSBs  -P   --stealthy --url $d ;done



#vulners-cve-nmap
#........................................................................................................................................
#this take time

echo -e "\033[36m[+]nmap-vulners Updating...\033[m" 
chmod +rwx /usr/share/nmap/scripts/
echo 'root' | sudo -kS rm  vulners.nse* 
echo 'root' | sudo -kS rm  /usr/share/nmap/scripts/vulners.nse* 
echo 'root' | sudo -kS wget https://raw.githubusercontent.com/vulnersCom/nmap-vulners/master/vulners.nse ;echo 'root' | sudo -kS mv vulners.nse /usr/share/nmap/scripts/ 
echo 'root' | sudo -kS  nmap --script-updatedb

echo "vulners started ips -->  " |notify -silent  -bulk ;  
echo 'root' |sudo -kS naabu -l shodan/naabu.txt  -Pn -silent  -nmap-cli "nmap  -Pn -T4 -D RND:5 -sVC -v  --script vulners,vuln --script-args mincvss=5.0 -oA vulners"

mkdir -p  shodan/nmap ; mv vulners*  shodan/nmap/
#................................  
#brutesprey
#........................................................................................................................................
echo "brutespray started ips -->  " |notify -silent  -bulk ;  
brutespray -f  shodan/nmap/vulners.gnmap


#cors
#........................................................................................................................................

cat  shodan/httpx.txt|python3 ~/tools/Corsy/corsy.py -t 20 -o cors.json ;
cat cors.json|jq|notify -silent  -bulk  

#urls-crawling
#........................................................................................................................................
echo "url crawling started  -->  " |notify -silent  -bulk ;  
#cat shodan/httpx.txt| waymore -mode U  --no-subs -oU url-tmp.txt
katana -silent -c 300  -list shodan/httpx.txt-cs shodan/httpx.txt|anew url-tmp.txt

cat url-tmp.txt|anew url-all.txt
rm url-tmp.txt


#target Based Wordlist
#........................................................................................................................................
mkdir -p target_wordlist


cat url-all.txt | unfurl -unique paths  |anew target_wordlist/paths.txt
cat url-all.txt| unfurl -unique keys |anew target_wordlist/param.txt

mkdir -p urls ; mv url-*  urls/


#gfx Patterns 
#........................................................................................................................................

#checking live url
#....................

cat urls/url-all.txt | egrep -v "\.woff|\.ttf|\.svg|\.eot|\.png|\.jpep|\.jpeg|\.css|\.ico|\jpg" | sed 's/:80//g;s/:443//g' | anew gf-tmp.txt

ffuf -t 100  -mc 200,301  -c -u "FUZZ" -w gf-tmp.txt -of csv -o ffuf-temp

cat ffuf-temp | grep http | awk -F "," '{print $1}' |anew urls/live-url.txt

rm gf-tmp.txt
rm ffuf-temp 

mkdir -p gf

gfx xss urls/live-url.txt |anew gf/xss.txt
gfx ssrf urls/live-url.txt |anew gf/ssrf.txt
gfx sqli urls/live-url.txt |anew gf/sql.txt
gfx lfi urls/live-url.txt |anew gf/lfi.txt
gfx ssti urls/live-url.txt |anew gf/ssti.txt
gfx redirect urls/live-url.txt |anew gf/redirect.txt
gfx idor urls/live-url.txt |anew gf/idor.txt
gfx ip urls/live-url.txt |anew gf/ip.txt
gfx rce urls/live-url.txt |anew gf/rce.txt
gfx s3-buckets urls/live-url.txt |anew gf/s3-buckets.txt
gfx upload-fields urls/live-url.txt |anew gf/upload-fields.txt



#url-js-filter
#........................................................................................................................................

cat urls/live-url.txt| uro|grep "\.js$" |anew js-tmp.txt

ffuf -t 100 -c -mc 200 -u "FUZZ" -w js-tmp.txt -of csv -o ffuf-js

cat ffuf-js| grep http | awk -F "," '{print $1}' |anew urls/live-js.txt

rm js-tmp.txt
rm ffuf-js

#nipejs
#....................

cat urls/live-js.txt|nipejs -s -c 100 |anew nipejs

#gfx Patterns on nipej
#....................


cat  nipejs  | grep http | sort -u|grep -o -E 'https?://[^"]+' |gfx xss |anew gf/xss.txt
cat  nipejs  | grep http | sort -u|grep -o -E 'https?://[^"]+' |gfx ssrf |anew gf/ssrf.txt
cat  nipejs  | grep http | sort -u|grep -o -E 'https?://[^"]+' |gfx sqli |anew gf/sql.txt
cat  nipejs  | grep http | sort -u|grep -o -E 'https?://[^"]+' |gfx lfi |anew gf/lfi.txt
cat  nipejs  | grep http | sort -u|grep -o -E 'https?://[^"]+' |gfx ssti |anew gf/ssti.txt
cat  nipejs  | grep http | sort -u|grep -o -E 'https?://[^"]+' |gfx redirect |anew gf/redirect.txt
cat  nipejs  | grep http | sort -u|grep -o -E 'https?://[^"]+' |gfx idor |anew gf/idor.txt
cat  nipejs  | grep http | sort -u|grep -o -E 'https?://[^"]+' |gfx ip |anew gf/ip.txt
cat  nipejs  | grep http | sort -u|grep -o -E 'https?://[^"]+' |gfx rce |anew gf/rce.txt
cat  nipejs  | grep http | sort -u|grep -o -E 'https?://[^"]+' |gfx s3-buckets |anew gf/s3-buckets.txt
cat  nipejs  | grep http | sort -u|grep -o -E 'https?://[^"]+' |gfx upload-fields |anew gf/upload-fields.txt



#js-downloading
#....................


mkdir -p urls/js-download/
echo -e "\033[33m[+] Downloading js files  \033[m"
cat urls/live-js.txt | xargs -P0 -n1 -I  {} wget -c "{}"  -P urls/js-download/



#nuclei-fuzzing-urls
#........................................................................................................................................
echo -e "\033[33m[+] nuclei fuzzinng on url  \033[m"|notify -silent -bulk 
cat urls/live-url.txt |uro|nuclei  -es info,low  -fuzz -t  ~/fuzzing-templates -t ~/nuclei-templates -o nuclei-fuzzing |notify -silent -bulk 



#xss-urls-freq
#........................................................................................................................................
mkdir -p bugs

cat urls/live-url.txt  | uro| grep "=" | qsreplace '"><img src=x onerror=alert(1)>' | freq | grep -iv "Not Vulnerable"|anew  bugs/xss.txt|notify -silent -bulk 
cat urls/live-url.txt |uro|grep "=" | qsreplace '"><script>alert(1)</script>' | freq | grep -iv "Not Vulnerable"|anew  bugs/xss.txt|notify -silent -bulk 



#urls-crawling
#........................................................................................................................................

#shodan-ip
#..............................................................................................................................................











