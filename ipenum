#!/bin/bash

# Function to display usage information
usage() {
    echo "Usage: $0 targets_file"
    echo "Example: $0 targets.txt"
}

# Check if the number of arguments provided is not equal to 1
if [ $# -ne 1 ]; then
    echo "Error: Missing or too many arguments."
    usage
    exit 1
fi

targets_file="$1"

# Ensure the shodan directory exists and is writable
mkdir -p shodan
chmod +rwx shodan/*

# Function to perform Shodan searches
perform_shodan_search() {
    local query="$1"
    shodanx custom -to 20 -ra -cq "$query" -o shodan/ip.txt
}

# Main loop to process each target in the targets file
cat "$targets_file" | while read host; do
    # Perform various Shodan searches based on domain, SSL, hostname, etc.
    perform_shodan_search "ssl:$host"
    perform_shodan_search "hostname:$host"
    perform_shodan_search "ssl.cert.subject.cn:$host"
    perform_shodan_search "http.title:'$host'"

    # Extract organization name and perform organization-based searches
    echo "$host" | cut -d'.' -f1 | anew org
done

# Process each organization and perform Shodan searches
cat org | while read host; do
    perform_shodan_search "org:$host"
    rm org
done

# Use FavFreak to fetch favicons and perform related searches
cat "$targets_file" | while read host; do
    echo "$host" | httpx | python3 ~/tools/FavFreak/favfreak.py --shodan -o fav
    ls fav/* | sed 's/fav\///; s/\.txt$//' | anew hash.txt
done

# Perform Shodan searches based on favicon hashes
cat hash.txt | while read host; do
    perform_shodan_search "http.favicon.hash:'$host'"
    rm hash.txt
    rm -rf fav/
done

# Filter and extract IPs from shodan/ip.txt
cat "$targets_file" | while read host; do
    cat shodan/ip.txt | tlsx -san -cn -silent | grep "$host" | grep -E -o '(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)' | anew shodan/ips.txt
done

# Perform additional IP extraction using hakip2host
cat "$targets_file" | while read host; do
    cat shodan/ip.txt | hakip2host | grep "$host" | grep -E -o '(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)' | anew shodan/ips.txt
done

# Clean up temporary files
rm shodan/ip.txt
sleep 5
